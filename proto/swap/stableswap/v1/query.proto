syntax = "proto3";

package swap.stableswap.v1;

import "amino/amino.proto";
import "cosmos/query/v1/query.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "swap.noble.xyz/types/stableswap";

service Query {
  rpc PositionsByProvider(QueryPositionsByProvider) returns (QueryPositionsByProviderResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/swap/stableswap/v1/positions/{provider}";
  }

  rpc UnbondingPositionsByProvider(QueryUnbondingPositionsByProvider) returns (QueryUnbondingPositionsByProviderResponse) {
    option (cosmos.query.v1.module_query_safe) = true;
    option (google.api.http).get = "/swap/stableswap/v1/unbonding-positions/{provider}";
  }
}

message QueryPositionsByProvider {
  string provider = 1;
}

message QueryPositionsByProviderResponse {
  message Position {
    uint64 pool_id = 1;
    string shares = 2 [
      (amino.dont_omitempty) = true,
      (cosmos_proto.scalar) = "cosmos.Dec",
      (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
      (gogoproto.nullable) = false
    ];
    google.protobuf.Timestamp timestamp = 3 [
      (gogoproto.nullable) = false,
      (gogoproto.stdtime) = true
    ];
  }

  repeated Position positions = 1 [(gogoproto.nullable) = false];
}

message QueryUnbondingPositionsByProvider {
  string provider = 1;
}

message QueryUnbondingPositionsByProviderResponse {
  message UnbondingPosition {
    uint64 pool_id = 1;
    string unbonding_shares = 2 [
      (amino.dont_omitempty) = true,
      (cosmos_proto.scalar) = "cosmos.Dec",
      (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
      (gogoproto.nullable) = false
    ];
    google.protobuf.Timestamp end_time = 4 [
      (gogoproto.nullable) = false,
      (gogoproto.stdtime) = true
    ];
  }

  repeated UnbondingPosition unbonding_positions = 1 [(gogoproto.nullable) = false];
}
