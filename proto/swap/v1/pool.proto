syntax = "proto3";

package swap.v1;

import "amino/amino.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "swap/v1/algorithm.proto";

option go_package = "swap.noble.xyz/types";

message Pool {
  uint64 id = 1;
  string address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  Algorithm algorithm = 3;
  string pair = 4;
  google.protobuf.Timestamp creation_time = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true
  ];
}

message PoolDetails {
  uint64 id = 1;
  string address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  Algorithm algorithm = 3;
  repeated string pairs = 4;
  google.protobuf.Any details = 5 [(cosmos_proto.accepts_interface) = "swap.v1.Pool"];
  repeated cosmos.base.v1beta1.Coin liquidity = 6 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (amino.encoding) = "legacy_coins",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  repeated cosmos.base.v1beta1.Coin protocol_fees = 7 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (amino.encoding) = "legacy_coins",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  repeated cosmos.base.v1beta1.Coin reward_fees = 8 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (amino.encoding) = "legacy_coins",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}
