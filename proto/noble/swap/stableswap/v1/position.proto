syntax = "proto3";

package noble.swap.stableswap.v1;

import "amino/amino.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "swap.noble.xyz/types/stableswap";

message BondedPosition {
  // Balance of bonded shares.
  string balance = 1 [
    (amino.dont_omitempty) = true,
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];

  // Time when the liquidity was added.
  google.protobuf.Timestamp timestamp = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true
  ];

  // Time when the rewards were collected.
  google.protobuf.Timestamp rewards_period_start = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true
  ];
}

message UnbondingPosition {
  // Amount of shares removed.
  string shares = 1 [
    (amino.dont_omitempty) = true,
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];

  // Liquidity amount being removed.
  repeated cosmos.base.v1beta1.Coin amount = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (amino.encoding) = "legacy_coins",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];

  // Time when the removed liquidity will be unlocked.
  google.protobuf.Timestamp end_time = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime) = true
  ];
}
